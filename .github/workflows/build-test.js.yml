# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

env:
  NODE_VERSION: 18.x

jobs:

  build-ngx-charts-on-fhir:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run build ngx-charts-on-fhir
      - uses: actions/upload-artifact@v3
        with:
          name: ngx-charts-on-fhir
          path: dist/ngx-charts-on-fhir

  build-apps:
    runs-on: ubuntu-latest
    needs: build-ngx-charts-on-fhir
    strategy:
      matrix:
        project:
          - showcase
          - cardiovascular-health
          - cardiovascular-patient-app
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ngx-charts-on-fhir
          path: dist/ngx-charts-on-fhir
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run build ${{ matrix.project }}

  test-and-scan:
    runs-on: ubuntu-latest
    needs: build-ngx-charts-on-fhir
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ngx-charts-on-fhir
          path: dist/ngx-charts-on-fhir
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm test -- --no-watch --code-coverage
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectKey=elimuinformatics_charts-on-fhir
            -Dsonar.organization=elimuinformatics-1
            -Dsonar.javascript.lcov.reportPaths=coverage/**/lcov.info
            -Dsonar.coverage.exclusions=**/*.spec.ts,**/test.ts,**/main.ts,**/polyfills.ts,**/*.module.ts,**/environment*.ts,**/*.js,projects/synthea-utils/*,projects/documentation/**/*
            -Dsonar.test.inclusions=**/*.spec.ts,**/test.ts
    
  build-docs:
    #if: ${{ github.ref == 'refs/heads/main' }} # temporarily commented out for testing
    needs: 
      - build-ngx-charts-on-fhir
      - build-apps
      - test-and-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ngx-charts-on-fhir
          path: dist/ngx-charts-on-fhir
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run build documentation -- --base-href=/charts-on-fhir/
      - run: cp dist/documentation/index.html dist/documentation/404.html # Needed for Angular routing
      - uses: actions/upload-pages-artifact@main
        with:
          path: dist/documentation

  deploy-docs:
    needs: build-docs
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  deploy-apps:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: 
      - build-ngx-charts-on-fhir
      - build-apps
      - test-and-scan
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.DEPLOY_HOOK_URL }}
          method: "POST"
